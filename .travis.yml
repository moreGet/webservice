language: java
jdk:
  - openjdk8

# gradlew 권한
before_install:
  - chmod +x gradlew

branches: # Travis CI를 어느 브랜치가 푸시될 때 수행할지 지정
  only: # Master 브랜치만 가능
    - master

# Travis CI 서버의 Home
cache: # 의존성을 아래 디렉토리에 캐싱하여 재배포시 중복 의존성은 받지 않음
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# Master 브랜치에 푸시 되었을때 수행하는 명령어 프로젝트 내부
# script: "./gradlew clean build"
script: "./gradlew -DskipTests=true build"

# Deploy 명령어가 수행 되기전 수행.
# CodeDeploy는 Jar 파일은 인식하지 못하므로 Jar+기타 설정 파일들을 모아 압축
# Travis CI는 S3로 특정 파일만 업로드가 안됨.
before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/ # before-deploy에는 zip 파일에 포함시킬 파일들을 저장.
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동 후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/freelec-springboot2-webservice.zip # deploy로 zip 파일 이동

#  - zip -r freelec-springboot2-webservice * # 현재 위치의 모든 파일을 해당 이름으로 압축
#  - mkdir -p deploy # Travis가 생성중인 위치에 deploy폴더 생성
#  - mv freelec-springboot2-webservice.zip deploy/freelec-springboot2-webservice.zip
#  # mv ~ <-- 위 zip파일을 오른쪽 deploy 경로로 이동

# S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언 합니다.
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settiongs에 설정된 값
    secret_access_key: $AWS_SECRET_KEY
    bucket: get-webservice-spring-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settiongs에 설정된 값
    secret_access_key: $AWS_SECRET_KEY
    bucket: get-webservice-spring-build # S3 버킷
    key: freelec-springboot2-webservice.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: get-webservice-spring-codedeploy # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: get-webservice-spring-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - dkdlwmzhs@naver.com