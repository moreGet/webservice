# 외부 properties
spring.profiles.include=oauth

# local
spring.profiles.active=local

# h2 webconsole 활성화
spring.h2.console.enabled=true

# jpa 의 sql 쿼리문 을 로그로 볼 수 있음
spring.jpa.show-sql=true

# 출력되는 쿼리 로그를 MySQL 버전으로 변경
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# db pool 설정
spring.datasource.hikari.minimum-idle=3
spring.datasource.hikari.maximum-pool-size=5

# spring security aouth2
spring.security.oauth2.client.registration.google.client-id=850417348860-6avt5dtq96r8290i7g30d66b882d4vf9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=17LO3Q4a1nHlksuFizX2hT1l
#기본 범위 값은 openid, profile, email 이다.
#아래 처럼 강제로 지정한 이유는 openid scope가 존재 하면 open id provider로 인식하기 때문
#openid 를 지정하게되면 구글 이외에 다른 연동 서비스도 각각 OAuth2Service를 만들어야함
#하나의 OAuth2Serice를 사용하기 위해 openid scope는 제외함
spring.security.oauth2.client.registration.google.scope=profile,email

# mustache index 설정
#spring.mustache.suffix=.html
#spring.mustache.prefix=classpath:/static/